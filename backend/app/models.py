from typing import Optional, Dict, Any
from sqlmodel import SQLModel, Field
from datetime import datetime
from sqlalchemy import JSON  # ðŸ‘ˆ Ù…Ù‡Ù…

class Resume(SQLModel, table=True):
    id: Optional[str] = Field(default=None, primary_key=True)
    text: str
    created_at: datetime = Field(default_factory=datetime.utcnow)

class JobDescription(SQLModel, table=True):
    id: Optional[str] = Field(default=None, primary_key=True)
    resume_id: str
    text: str
    created_at: datetime = Field(default_factory=datetime.utcnow)

class Analysis(SQLModel, table=True):
    id: Optional[str] = Field(default=None, primary_key=True)
    resume_id: str
    jd_id: str
    # ðŸ‘‡ Ø§ÛŒÙ† Ø³Ù‡â€ŒØªØ§ Ù‚Ø¨Ù„Ø§Ù‹ dict Ø®Ø§Ù„ÛŒ Ø¨ÙˆØ¯Ù†Ø› Ø§Ù„Ø§Ù† Ø¨Ù‡ JSON Ù…Ù¾ Ø´Ø¯Ù†
    scores: Dict[str, Any] = Field(default_factory=dict, sa_type=JSON)
    keywords: Dict[str, Any] = Field(default_factory=dict, sa_type=JSON)
    suggestions: Dict[str, Any] = Field(default_factory=dict, sa_type=JSON)
    created_at: datetime = Field(default_factory=datetime.utcnow)
